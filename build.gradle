buildscript {
    ext {
        springBootVersion = '1.2.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot' 

jar {
    baseName = 'spring-chores'
    version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-security")
    testCompile("org.springframework.boot:spring-boot-starter-test") 

    // Spring Cloud
    compile("org.springframework.cloud:spring-cloud-spring-service-connector:${springCloudVersion}")
    compile("org.springframework.cloud:spring-cloud-cloudfoundry-connector:${springCloudVersion}")

    // Webjars
    compile("org.webjars:bootstrap:3.1.1")
    compile("org.webjars:angularjs:1.2.16")
    compile("org.webjars:angular-ui:0.4.0-2")
    compile("org.webjars:angular-ui-bootstrap:0.10.0-1")
    compile("org.webjars:angular-ui-router:0.2.13")
    compile("org.webjars:jquery:2.1.0-2")
    
    // Local Database (for dev/test)
    runtime("com.h2database:h2:1.3.162")
}

eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

